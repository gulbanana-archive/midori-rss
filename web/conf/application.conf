# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="L`^y1e2UYZftNyP=7@Vn]cd=t8vP=rFavUDY3_i=y@JohWpyLlp6P8nw6vhD^8O2"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
mongodb.servers = ["localhost:27017"]
mongodb.db = "midori"

# Logging
# ~~~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .
# Root logger:
logger.root=ERROR
# Logger used by the framework:
logger.play=INFO
# Logger provided to your application:
logger.application=DEBUG

# MidorI
# ~~~~~~
# Reduce these intervals to update feeds and send push notifications more regularly
# Incrase them to lower server load and bandwidth usage
midori.checkInterval = 30 seconds
midori.notifyInterval = 5 minutes